# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  username: String!
  email: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Workspace {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
}

type Message {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  content: String!
  senderId: String!
  channelId: String!
}

type DirectMessage {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  workspaceId: String!
  content: String!
  receiverId: String!
  senderId: String!
}

type LoginResponse {
  accessToken: String!
  user: User!
}

type ChannelMessagePayload {
  message: Message!
  channelId: String!
}

type RenewAuthDataPayload {
  subscriberId: String!
}

type RenewAuthDataEvent {
  """type: EventTypes.RENEW_AUTH_DATA"""
  type: EventTypes!
  payload: RenewAuthDataPayload!
}

enum EventTypes {
  RENEW_AUTH_DATA
  CHANNEL_MESSAGE
  DIRECT_MESSAGE
}

type DirectMessagePayload {
  message: DirectMessage!
}

type Query {
  ping: String!
}

type Mutation {
  login(loginInput: LoginInput!): LoginResponse!
  createChannelMessage(createMessageInput: CreateChannelMessageInput!): Message!
  renewSubscriberAuthData(subscriberId: String!): String!
}

input LoginInput {
  username: String!
  password: String!
}

input CreateChannelMessageInput {
  channelId: String!
  content: String!
}

type Subscription {
  event: Event!
  authEvent: RenewAuthDataEvent!
}

union Event = DirectMessageEvent | ChannelMessageEvent

type DirectMessageEvent {
  """type: EventTypes.DIRECT_MESSAGE"""
  type: EventTypes!
  payload: DirectMessagePayload!
}

type ChannelMessageEvent {
  """type: EventTypes.CHANNEL_MESSAGE"""
  type: EventTypes!
  payload: ChannelMessagePayload!
}